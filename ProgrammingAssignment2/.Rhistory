a
a<- available.packages()
head(rownames(a),3)
install.packages("KernSmooth")
library(KernSmooth)
swirl()
library("swirl")
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
play()
?table
nxt()
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
exit()
quit()
bye()
library(datasets)
data(iris)
head(iris)
tapply(iris, "virginica", mean)
head(iris$Species)
iris[, iris$Species == virginica]
swirl()
bye()
swirl()
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
play()
iris
table(iris$Species)
nxt()
table(flags$animate)
play()
tapply(iris, iris$Species, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
apply(iris, [, 1:4], mean)
rowMeans(iris, [, 1:4])
colMeans(iris)
head(iris)
apply(iris, [, 1:4], 2, mean)
apply(iris[,1:4], 2, mean)
data(mtcars)
?mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
sty <- tapply(mtcars$mpg, mtcars$cyl, mean)
sty[1]
sty[1] - sty[3]
tapply(iris$Sepal.Length, iris$Species, mean)
sty <- tapply(mtcars$hp, mtcars$cyl, mean)
sty
sty[3] - sty[1]
print(ok())
print(ok)
bye()
source('~/datasciencecoursera/pollutantmean.R')
a <- makeVector(c(5,1,3))
a$get()
a$set(c(1,3,5))
a$get()
source('~/datasciencecoursera/pollutantmean.R')
getwd()
dir <- "/Users/briannasmrke/datasciencecoursera/ProgrammingAssignment2"
setwd(dir)
getwd()
source('~/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
source('~/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
testmatrix <- matrix(c(1/2, -1/4, -1, 3/4), nrow = 2, ncol = 2)
makeCacheMatrix(testmatrix)
testmx <- makeCacheMatrix(testmatrix)
testmx$get()
testmx$getinv()
cacheSolve(testmx)
cacheSolve(testmx)
source('~/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
source('~/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
source('~/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
source('~/datasciencecoursera/ProgrammingAssignment2/testMX.R')
testmx2 <- makeCacheMatrix(testmatrix)
cacheSolve(testmx2)
source('~/datasciencecoursera/ProgrammingAssignment2/testMX.R')
testmx2 <- makeCacheMatrix(testmatrix)
cacheSolve(testmx2)
cacheSolve(testmx2)
source('~/datasciencecoursera/ProgrammingAssignment2/testMX.R')
testmx2 <- makeCacheMatrix(testmatrix)
cacheSolve(testmx2)
cacheSolve(testmx2)
source('~/datasciencecoursera/ProgrammingAssignment2/testMX.R')
testmx2 <- makeCacheMatrix(testmatrix)
cacheSolve(testmx2)
cacheSolve(testmx2)
source('~/Documents/GitHub/ProgrammingAssignment2/cachematrix.R')
testmx2 <- makeCacheMatrix(testmatrix)
cacheSolve(testmx2)
cacheSolve(testmx2)
source('~/Documents/GitHub/ProgrammingAssignment2/cachematrix.R')
